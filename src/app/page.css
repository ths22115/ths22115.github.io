.page {
  display: grid;
  grid-template-rows: repeat(10, 1fr);
  grid-template-columns: 1fr 9fr;
  /* align-items: center;
  justify-items: center; */
  min-height: 100svh;
  max-height: 100lvh;
  width: 100%;
  padding: 80px;
  /* gap: 64px; */
  /* font-family: var(--font-geist-sans); */
}

/* @media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
} */

.tv-static {
  position: absolute;
  top: 0;
  left: 0;
  width: 200dvw;
  height: 200dvh;
  background-color: #fb0000;
  filter: url(#grainy);
  opacity: 100%;
  animation: .3s linear 0s infinite normal animating-multiple-properties;
}

/* it is possible to animate multiple properties in a single animation */
@keyframes animating-multiple-properties {
  from {
    rotate: 0deg;

  }
  to {
    rotate: 360deg;
    /* unset properties i.e. 'filter' will revert to default values */
  }
}
.nav {
  grid-row: 4/5;
  grid-column: 2/3;
}

.title {
  font: var(--h1);
  color: var(--grayo);

}
.mius {
  font-size: 1.75rem;
}

.nav-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  list-style-position: inside;
}
.nav-button {
  font: var(--p);
  color: var(--gray30);
  opacity: .8;
  list-style-type: none;
  line-height: 1.75rem;
}

/* Enable hover only on non-touch devices */
/* @media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: 600px) {
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
} */
